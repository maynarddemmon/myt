#!/usr/bin/env node

var exec = require('child_process').exec,
    arguments = process.argv.splice(2),
    manifestFile = arguments[0],
    targetFile = arguments[1],
    rootPath = arguments[2],
    requiredFiles = arguments.splice(3);

if (!manifestFile) {
    console.error('No manifest file provided.');
    return;
}
if (!targetFile) {
    console.error('No target file provided.');
    return;
}
if (!rootPath) {
    console.error('No root path provided.');
    return;
}
if (!requiredFiles.length > 0) {
    console.error('No required file provided.');
    return;
}

// First use jsbuild to combine files
// -P option removes the Package system from JS.Class
var handleResults = function (error, stdout, stderr) {
        if (stdout) console.error('stdout: ' + stdout);
        if (stderr) console.error('stderr: ' + stderr);
        if (error) console.error('exec error: ' + error);
    },
    cmd = 'jsbuild -m ' + manifestFile + ' -P -r ' + rootPath + ' ' + 
        requiredFiles.join(' ') + ' > ' + targetFile;
console.error("Executing: " + cmd);
exec(cmd, function (error, stdout, stderr) {
    handleResults(error, stdout, stderr);
    
    // Then use closure compiler to compress the combined file
    var cmd = 'java -Xmx256m -jar bin/closure-compiler/compiler.jar --js ' + 
        targetFile + ' --js_output_file ' + 
        targetFile.substring(0, targetFile.length - 2) + 'min.js';
    console.error("Executing: " + cmd);
    exec(cmd, handleResults);
});
